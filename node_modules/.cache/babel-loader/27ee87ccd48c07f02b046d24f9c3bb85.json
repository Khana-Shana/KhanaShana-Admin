{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nvar ROUND_PRECISION = 1000;\n/**\r\n * Validate that children, if any, are instances of `<ProgressBar>`.\r\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    }\n    /**\r\n     * Compare types in a way that works with libraries that patch and proxy\r\n     * components like react-hot-loader.\r\n     *\r\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\r\n     */\n\n\n    var element = React.createElement(ProgressBar, null);\n    if (child.type === element.type) return;\n    var childIdentifier = React.isValidElement(child) ? child.type.displayName || child.type.name || child.type : child;\n    error = new Error(\"Children of \" + componentName + \" can contain only ProgressBar \" + (\"components. Found \" + childIdentifier + \".\"));\n  });\n  return error;\n}\n\nvar defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  srOnly: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar(_ref, ref) {\n  var _classNames;\n\n  var min = _ref.min,\n      now = _ref.now,\n      max = _ref.max,\n      label = _ref.label,\n      srOnly = _ref.srOnly,\n      striped = _ref.striped,\n      animated = _ref.animated,\n      className = _ref.className,\n      style = _ref.style,\n      variant = _ref.variant,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"className\", \"style\", \"variant\", \"bsPrefix\"]);\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, props, {\n    role: \"progressbar\",\n    className: classNames(className, bsPrefix + \"-bar\", (_classNames = {}, _classNames[\"bg-\" + variant] = variant, _classNames[bsPrefix + \"-bar-animated\"] = animated, _classNames[bsPrefix + \"-bar-striped\"] = animated || striped, _classNames)),\n    style: _extends({\n      width: getPercentage(now, min, max) + \"%\"\n    }, style),\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max\n  }), srOnly ? React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, label) : label);\n}\n\nvar ProgressBar = React.forwardRef(function (_ref2, ref) {\n  var isChild = _ref2.isChild,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"isChild\"]);\n\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  var min = props.min,\n      now = props.now,\n      max = props.max,\n      label = props.label,\n      srOnly = props.srOnly,\n      striped = props.striped,\n      animated = props.animated,\n      bsPrefix = props.bsPrefix,\n      variant = props.variant,\n      className = props.className,\n      children = props.children,\n      wrapperProps = _objectWithoutPropertiesLoose(props, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"bsPrefix\", \"variant\", \"className\", \"children\"]);\n\n  return React.createElement(\"div\", _extends({\n    ref: ref\n  }, wrapperProps, {\n    className: classNames(className, bsPrefix)\n  }), children ? map(children, function (child) {\n    return cloneElement(child, {\n      isChild: true\n    });\n  }) : renderProgressBar({\n    min: min,\n    now: now,\n    max: max,\n    label: label,\n    srOnly: srOnly,\n    striped: striped,\n    animated: animated,\n    bsPrefix: bsPrefix,\n    variant: variant\n  }, ref));\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","map":{"version":3,"sources":["C:/Users/omeri/OneDrive/Documents/Software Engineering/KhanaShana-Admin/node_modules/react-bootstrap/esm/ProgressBar.js"],"names":["_extends","_objectWithoutPropertiesLoose","classNames","React","cloneElement","useBootstrapPrefix","map","ROUND_PRECISION","onlyProgressBar","props","propName","componentName","children","error","Children","forEach","child","element","createElement","ProgressBar","type","childIdentifier","isValidElement","displayName","name","Error","defaultProps","min","max","animated","isChild","srOnly","striped","getPercentage","now","percentage","Math","round","renderProgressBar","_ref","ref","_classNames","label","className","style","variant","bsPrefix","role","width","forwardRef","_ref2","wrapperProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport classNames from 'classnames';\r\nimport React, { cloneElement } from 'react';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport { map } from './ElementChildren';\r\nvar ROUND_PRECISION = 1000;\r\n/**\r\n * Validate that children, if any, are instances of `<ProgressBar>`.\r\n */\r\n\r\nfunction onlyProgressBar(props, propName, componentName) {\r\n  var children = props[propName];\r\n\r\n  if (!children) {\r\n    return null;\r\n  }\r\n\r\n  var error = null;\r\n  React.Children.forEach(children, function (child) {\r\n    if (error) {\r\n      return;\r\n    }\r\n    /**\r\n     * Compare types in a way that works with libraries that patch and proxy\r\n     * components like react-hot-loader.\r\n     *\r\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\r\n     */\r\n\r\n\r\n    var element = React.createElement(ProgressBar, null);\r\n    if (child.type === element.type) return;\r\n    var childIdentifier = React.isValidElement(child) ? child.type.displayName || child.type.name || child.type : child;\r\n    error = new Error(\"Children of \" + componentName + \" can contain only ProgressBar \" + (\"components. Found \" + childIdentifier + \".\"));\r\n  });\r\n  return error;\r\n}\r\n\r\nvar defaultProps = {\r\n  min: 0,\r\n  max: 100,\r\n  animated: false,\r\n  isChild: false,\r\n  srOnly: false,\r\n  striped: false\r\n};\r\n\r\nfunction getPercentage(now, min, max) {\r\n  var percentage = (now - min) / (max - min) * 100;\r\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\r\n}\r\n\r\nfunction renderProgressBar(_ref, ref) {\r\n  var _classNames;\r\n\r\n  var min = _ref.min,\r\n      now = _ref.now,\r\n      max = _ref.max,\r\n      label = _ref.label,\r\n      srOnly = _ref.srOnly,\r\n      striped = _ref.striped,\r\n      animated = _ref.animated,\r\n      className = _ref.className,\r\n      style = _ref.style,\r\n      variant = _ref.variant,\r\n      bsPrefix = _ref.bsPrefix,\r\n      props = _objectWithoutPropertiesLoose(_ref, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"className\", \"style\", \"variant\", \"bsPrefix\"]);\r\n\r\n  return React.createElement(\"div\", _extends({\r\n    ref: ref\r\n  }, props, {\r\n    role: \"progressbar\",\r\n    className: classNames(className, bsPrefix + \"-bar\", (_classNames = {}, _classNames[\"bg-\" + variant] = variant, _classNames[bsPrefix + \"-bar-animated\"] = animated, _classNames[bsPrefix + \"-bar-striped\"] = animated || striped, _classNames)),\r\n    style: _extends({\r\n      width: getPercentage(now, min, max) + \"%\"\r\n    }, style),\r\n    \"aria-valuenow\": now,\r\n    \"aria-valuemin\": min,\r\n    \"aria-valuemax\": max\r\n  }), srOnly ? React.createElement(\"span\", {\r\n    className: \"sr-only\"\r\n  }, label) : label);\r\n}\r\n\r\nvar ProgressBar = React.forwardRef(function (_ref2, ref) {\r\n  var isChild = _ref2.isChild,\r\n      props = _objectWithoutPropertiesLoose(_ref2, [\"isChild\"]);\r\n\r\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\r\n\r\n  if (isChild) {\r\n    return renderProgressBar(props, ref);\r\n  }\r\n\r\n  var min = props.min,\r\n      now = props.now,\r\n      max = props.max,\r\n      label = props.label,\r\n      srOnly = props.srOnly,\r\n      striped = props.striped,\r\n      animated = props.animated,\r\n      bsPrefix = props.bsPrefix,\r\n      variant = props.variant,\r\n      className = props.className,\r\n      children = props.children,\r\n      wrapperProps = _objectWithoutPropertiesLoose(props, [\"min\", \"now\", \"max\", \"label\", \"srOnly\", \"striped\", \"animated\", \"bsPrefix\", \"variant\", \"className\", \"children\"]);\r\n\r\n  return React.createElement(\"div\", _extends({\r\n    ref: ref\r\n  }, wrapperProps, {\r\n    className: classNames(className, bsPrefix)\r\n  }), children ? map(children, function (child) {\r\n    return cloneElement(child, {\r\n      isChild: true\r\n    });\r\n  }) : renderProgressBar({\r\n    min: min,\r\n    now: now,\r\n    max: max,\r\n    label: label,\r\n    srOnly: srOnly,\r\n    striped: striped,\r\n    animated: animated,\r\n    bsPrefix: bsPrefix,\r\n    variant: variant\r\n  }, ref));\r\n});\r\nProgressBar.displayName = 'ProgressBar';\r\nProgressBar.defaultProps = defaultProps;\r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}