{"ast":null,"code":"var _jsxFileName = \"/media/muji/Local Disk/University/1902/Software_Engineering/SE Project/Development/KhanaShana-Admin/src/components/OrderQ.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ReactBootstrap, { Table } from 'react-bootstrap';\nimport firebase_integration from '../Fire.js';\n\nfunction OrderQ() {\n  const [myData, setData] = useState([]);\n  useEffect(() => {\n    firebase_integration.database.collection(\"RegularOrder\").where(\"Tracking\", \"in\", ['Pending', 'None', 'Cancelled', 'Preparing']).onSnapshot(snapshot => {\n      var order_arr = [];\n      snapshot.docs.forEach(doc => {\n        order_arr.push(doc.data());\n      });\n      setData(order_arr);\n    });\n  }, myData);\n\n  const rejectingOrder = user => {\n    {\n      /*Changes the Action and Tracking fields in Firebase*/\n    }\n    firebase_integration.updateOrderQueueAction(user.OrderID, \"Reject\");\n    firebase_integration.updateOrderQueueTracking(user.OrderID, \"None\");\n  };\n\n  const returnAction = user => {\n    {\n      /*Conditionally renders the Action column of the Table*/\n    }\n\n    if (user.Action === \"Accept/Reject\") {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => firebase_integration.updateOrderQueueAction(user.OrderID, \"Accept\"),\n        className: \"bg-green pointer dim ph2 ba bw1 ma1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 10\n        }\n      }, \"Accept\"), /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => rejectingOrder(user),\n        className: \"bg-red pointer ph2 dim ba bw1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 6\n        }\n      }, \"Reject\"));\n    } else if (user.Action === \"Accept\") {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bg-green b\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 10\n        }\n      }, \"Accepted\"));\n    } else if (user.Action === \"Cancelled\") {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 10\n        }\n      }, \"-\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bg-red b\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 10\n        }\n      }, \"Rejected\"));\n    }\n  };\n\n  const returnTracking = user => {\n    {\n      /*Conditionally renders the Order Tracking column of the Table*/\n    }\n\n    if (user.Tracking === \"Cancelled\") {\n      firebase_integration.updateOrderQueueAction(user.OrderID, \"Cancelled\");\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bg-yellow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 10\n        }\n      }, \"Cancelled\"));\n    }\n\n    if (user.Action === \"Accept/Reject\") {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"b\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 10\n        }\n      }, \"Waiting for Action\"));\n    } else if (user.Action === \"Accept\" && user.Tracking === \"Pending\") {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => firebase_integration.updateOrderQueueTracking(user.OrderID, \"Preparing\"),\n        className: \"bg-gray pointer ph2 dim ba bw1 ma1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 10\n        }\n      }, \"Prepare\"));\n    } else if (user.Action === \"Accept\" && user.Tracking === \"Preparing\") {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"orange i mr2 f4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, \"Preparing\"), /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => firebase_integration.updateOrderQueueTracking(user.OrderID, \"Done\"),\n        className: \"bg-light-silver pointer dim ph2 ba bw1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }, \"Done\"));\n    } else //Order has been Rejected\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 10\n        }\n      }, \"-\"));\n  };\n\n  const renderTable = () => {\n    return myData.map(user => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, user.Date.toDate().getDate() + \"-\" + (user.Date.toDate().getMonth() + 1) + \"-\" + user.Date.toDate().getFullYear()), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, user.OrderID), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, user.CustomerID), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }, user.Address), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, user.DishName.toString()), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, user.DishQuantity.toString()), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, user.Subtotal), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, user.OrderType), returnAction(user), returnTracking(user));\n    });\n  }; //returns the Table headings and calls the renderTable function to fill in the table body\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    responsive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"bg-light-silver tc \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"DATE\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"ORDER ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"CUST_ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"ADDRESS\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"DELIVERY ITEMS\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"QTY\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"TOTAL(PKR)\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"ORDER TYPE\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"ACTION\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"ORDER TRACKING\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, renderTable())));\n}\n\nexport default OrderQ;","map":{"version":3,"sources":["/media/muji/Local Disk/University/1902/Software_Engineering/SE Project/Development/KhanaShana-Admin/src/components/OrderQ.jsx"],"names":["React","useState","useEffect","ReactBootstrap","Table","firebase_integration","OrderQ","myData","setData","database","collection","where","onSnapshot","snapshot","order_arr","docs","forEach","doc","push","data","rejectingOrder","user","updateOrderQueueAction","OrderID","updateOrderQueueTracking","returnAction","Action","returnTracking","Tracking","renderTable","map","Date","toDate","getDate","getMonth","getFullYear","CustomerID","Address","DishName","toString","DishQuantity","Subtotal","OrderType"],"mappings":"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","sourcesContent":["import React , { useState, useEffect } from 'react';\nimport ReactBootstrap, {Table} from 'react-bootstrap';\nimport firebase_integration from '../Fire.js'\n\nfunction OrderQ() {\n\n\t\tconst [myData,setData] = useState([]);\n\n\t\tuseEffect(()=>{\n\t\t\tfirebase_integration.database.collection(\"RegularOrder\").where(\"Tracking\", \"in\", ['Pending', 'None', 'Cancelled', 'Preparing']).onSnapshot((snapshot) => {\n\t\t\t\tvar order_arr = []\n\t\t\t\tsnapshot.docs.forEach(doc => {\n\t\t\t\torder_arr.push(doc.data())\n\t\t\t});\n\t\t\t\tsetData(order_arr)\n\t\t\t})\n\t\t},myData);\n\n\n\t\tconst rejectingOrder = (user) => {\n\t\t\t{/*Changes the Action and Tracking fields in Firebase*/}\n\t\t\tfirebase_integration.updateOrderQueueAction(user.OrderID,\"Reject\")\n\t\t\tfirebase_integration.updateOrderQueueTracking(user.OrderID,\"None\")\n\t\t}\n\n\t\t\n\t\tconst returnAction=(user)=>{\n\t\t\t{/*Conditionally renders the Action column of the Table*/}\n\t\t\t\n\t\t\tif (user.Action === \"Accept/Reject\"){\n\t\t\t\treturn(\n\t\t\t\t\t<td><span onClick={()=>firebase_integration.updateOrderQueueAction(user.OrderID,\"Accept\")} className=\"bg-green pointer dim ph2 ba bw1 ma1\">Accept</span>\n\t\t\t\t\t<span onClick={()=>rejectingOrder(user)} className=\"bg-red pointer ph2 dim ba bw1\">Reject</span></td>\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (user.Action===\"Accept\"){\n\t\t\t\treturn (\n\t\t\t\t\t<td><span className=\"bg-green b\">Accepted</span></td>\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (user.Action === \"Cancelled\"){\n\t\t\t\treturn(\n\t\t\t\t\t<td><span>-</span></td>\n\t\t\t\t);\n\t\t\t}\n\t\t\telse{\n\t\t\t\treturn(\n\t\t\t\t\t<td><span className=\"bg-red b\">Rejected</span></td>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst returnTracking=(user)=>{\n\t\t\t{/*Conditionally renders the Order Tracking column of the Table*/}\n\t\t\t\n\t\t\tif (user.Tracking === \"Cancelled\"){\n\t\t\t\tfirebase_integration.updateOrderQueueAction(user.OrderID,\"Cancelled\")\n\t\t\t\treturn(\n\t\t\t\t\t\n\t\t\t\t\t<td><span className=\"bg-yellow\">Cancelled</span></td>\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (user.Action === \"Accept/Reject\"){\n\t\t\t\treturn(\n\t\t\t\t\t<td><p className=\"b\">Waiting for Action</p></td>\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (user.Action === \"Accept\" && user.Tracking === \"Pending\"){\n\t\t\t\treturn(\n\t\t\t\t\t<td><span onClick={()=>firebase_integration.updateOrderQueueTracking(user.OrderID,\"Preparing\")} className=\"bg-gray pointer ph2 dim ba bw1 ma1\">Prepare</span>\n\t\t\t\t\t</td>\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (user.Action === \"Accept\" && user.Tracking === \"Preparing\"){\n\t\t\t\treturn(\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<span className=\"orange i mr2 f4\">Preparing</span>\n\t\t\t\t\t\t<span onClick={()=>firebase_integration.updateOrderQueueTracking(user.OrderID,\"Done\")} className=\"bg-light-silver pointer dim ph2 ba bw1\">Done</span>\n\t\t\t\t\t</td>\n\t     \t\t);\n\t\t\t}\n\t\t\telse //Order has been Rejected\n\t\t\t\treturn(\n\t\t\t\t\t<td><span>-</span></td> \n\t\t\t);\n\t\t}\n\n\n\t\tconst renderTable = () => {\n\t\t    return myData.map(user => {\n\t\t      return (\n\t\t        <tr>\n\t\t          <td>{user.Date.toDate().getDate()+\"-\"+(user.Date.toDate().getMonth()+1)+\"-\"+user.Date.toDate().getFullYear()}</td>\n\t\t          <td>{user.OrderID}</td>\n\t\t          <td>{user.CustomerID}</td>\n\t\t          <td>{user.Address}</td>\n\t\t          <td>{user.DishName.toString()}</td>\n\t\t          <td>{user.DishQuantity.toString()}</td>\n\t\t          <td>{user.Subtotal}</td>\n\t\t          <td>{user.OrderType}</td>\n\t\t          {returnAction(user)}\n\t\t          {returnTracking(user)}\n\t\t        </tr>\n\t\t      )\n\t\t    })\n\t\t  }\n\t\n\t//returns the Table headings and calls the renderTable function to fill in the table body\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Table responsive>\n\t\t\t\t  <thead>\n\t\t\t\t    <tr className=\"bg-light-silver tc \">\n\t\t\t\t      <th>DATE</th>\n\t\t\t\t      <th>ORDER ID</th>\n\t\t\t\t      <th>CUST_ID</th> \n\t\t\t\t      <th>ADDRESS</th>\n\t\t\t\t      <th>DELIVERY ITEMS</th> \t\n\t\t\t\t      <th>QTY</th>\n\t\t\t\t      <th>TOTAL(PKR)</th>\n\t\t\t\t      <th>ORDER TYPE</th>\n\t\t\t\t      <th>ACTION</th>\n\t\t\t\t      <th>ORDER TRACKING</th>\n\t\t\t\t    </tr>\n\t\t\t\t  </thead>\n\t\t\t\n\t\t\t\t  <tbody>{renderTable()}</tbody>\n\t\t\t\t\n\t\t\t\t</Table>\n\t\t\t</div>\n\t\t);\n\t\t\n}\n\n\nexport default OrderQ;"]},"metadata":{},"sourceType":"module"}