{"ast":null,"code":"var _jsxFileName = \"/media/muji/Local Disk/University/1902/Software_Engineering/SE Project/Development/KhanaShana-Admin/src/components/CompletedOrders.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport 'isomorphic-fetch';\nimport 'es6-promise';\nimport ReactBootstrap, { InputGroup, FormControl, Nav, Button, Navbar, NavDropdown, Table } from 'react-bootstrap';\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport firebase_integration from '../Fire.js';\n\nfunction CompletedOrders() {\n  const [myData, setData] = useState([]);\n  useEffect(() => {\n    //ADD DATE WALA FILTER \n    firebase_integration.database.collection(\"RegularOrder\").where(\"Action\", \"==\", \"Accept\").where(\"Tracking\", \"==\", \"Done\").onSnapshot(snapshot => {\n      var order_arr = [];\n      snapshot.docs.forEach(doc => {\n        order_arr.push(doc.data());\n      });\n      setData(order_arr);\n      console.log(order_arr);\n    });\n  }, myData); // https://stackoverflow.com/questions/56896037/using-react-hooks-axios-to-fetch-data-and-display-in-a-table\t\t\n\n  const renderTable = () => {\n    return myData.map(user => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 12\n        }\n      }, user.Date.toDate().getDate() + \"-\" + (user.Date.toDate().getMonth() + 1) + \"-\" + user.Date.toDate().getFullYear()), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 12\n        }\n      }, user.OrderID), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 12\n        }\n      }, user.CustomerID), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 12\n        }\n      }, user.Address), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 12\n        }\n      }, user.DishName.toString()), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 12\n        }\n      }, user.DishQuantity.toString()), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 12\n        }\n      }, user.Subtotal), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 12\n        }\n      }, user.OrderType));\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    // https://react-bootstrap.github.io/components/table/\n    React.createElement(Table, {\n      responsive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"bg-light-silver\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }\n    }, \"DATE\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }\n    }, \"ORDER ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }\n    }, \"CUST_ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }\n    }, \"ADDRESS\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }\n    }, \"DELIVERY ITEMS\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }\n    }, \"QTY\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 10\n      }\n    }, \"TOTAL(PKR)\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 10\n      }\n    }, \"ORDER TYPE\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }\n    }, renderTable()))\n  );\n} // class CompletedOrders extends Component{\n// \trender(){\n// \t}\n// }\n\n\nexport default CompletedOrders; // <Table responsive>\n// \t\t\t\t  <thead>\n// \t\t\t\t    <tr className=\"bg-light-silver\">\n// \t\t\t\t      <th>DATE</th>\n// \t\t\t\t      <th>ORDER ID</th>\n// \t\t\t\t      <th>CUST_ID</th>\n// \t\t\t\t      <th>ADDRESS</th>\n// \t\t\t\t      <th>DELIVERY ITEMS</th>\n// \t\t\t\t      <th>QTY</th>\n// \t\t\t\t      <th>TOTAL(PKR)</th>\n// \t\t\t\t      <th>ORDER TYPE</th>\n// \t\t\t\t      <th>ACTION</th>\n// \t\t\t\t      <th>ORDER TRACKING</th>\n// \t\t\t\t    </tr>\n// \t\t\t\t  </thead>\n// \t\t\t\t  <tbody>\n// \t\t\t\t    <tr>\n// \t\t\t\t      <td>1</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td><button  className=\"bg-green\">Accept</button><button className=\"bg-red\">Reject</button></td>\n// \t\t\t\t      <td><button className=\"bg-gray\">Preparing</button><button className=\"bg-light-silver\">Done</button></td>\n// \t\t\t\t    </tr>\n// \t\t\t\t    <tr>\n// \t\t\t\t      <td>2</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td><button className=\"bg-green\">Accept</button><button className=\"bg-red\">Reject</button></td>\n// \t\t\t\t      <td><button className=\"bg-gray\">Preparing</button><button className=\"bg-light-silver\">Done</button></td>\n// \t\t\t\t    </tr>\n// \t\t\t\t    <tr>\n// \t\t\t\t      <td>3</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td><button className=\"bg-green\">Accept</button><button className=\"bg-red\">Reject</button></td>\n// \t\t\t\t      <td><button className=\"bg-gray\">Preparing</button><button className=\"bg-light-silver\">Done</button></td>\n// \t\t\t\t    </tr>\n// \t\t\t\t  </tbody>\n// \t\t\t\t</Table>","map":{"version":3,"sources":["/media/muji/Local Disk/University/1902/Software_Engineering/SE Project/Development/KhanaShana-Admin/src/components/CompletedOrders.jsx"],"names":["React","useState","useEffect","ReactBootstrap","InputGroup","FormControl","Nav","Button","Navbar","NavDropdown","Table","MDBTable","MDBTableBody","MDBTableHead","firebase_integration","CompletedOrders","myData","setData","database","collection","where","onSnapshot","snapshot","order_arr","docs","forEach","doc","push","data","console","log","renderTable","map","user","Date","toDate","getDate","getMonth","getFullYear","OrderID","CustomerID","Address","DishName","toString","DishQuantity","Subtotal","OrderType"],"mappings":"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","sourcesContent":["import React , { useState, useEffect } from 'react';\nimport 'isomorphic-fetch';\nimport 'es6-promise';\nimport ReactBootstrap, {InputGroup,FormControl,Nav, Button, Navbar,NavDropdown,Table} from 'react-bootstrap';\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\nimport firebase_integration from '../Fire.js'\n\nfunction CompletedOrders() {\n\n\tconst [myData,setData] = useState([]);\n\tuseEffect(()=>{\n\t\t//ADD DATE WALA FILTER \n\t\tfirebase_integration.database.collection(\"RegularOrder\").where(\"Action\", \"==\", \"Accept\").where(\"Tracking\", \"==\", \"Done\").onSnapshot((snapshot) => {\n            var order_arr = []\n            snapshot.docs.forEach(doc => {\n                order_arr.push(doc.data())\n            });\n\t\t\tsetData(order_arr)\n\t\t\tconsole.log(order_arr)\n        })\n\t},myData);\n\n\t// https://stackoverflow.com/questions/56896037/using-react-hooks-axios-to-fetch-data-and-display-in-a-table\t\t\n\tconst renderTable = () => {\n\t    return myData.map(user => {\n\t      return (\n\t        <tr>\n\t          <td>{user.Date.toDate().getDate()+\"-\"+(user.Date.toDate().getMonth()+1)+\"-\"+user.Date.toDate().getFullYear()}</td>\n\t          <td>{user.OrderID}</td>\n\t          <td>{user.CustomerID}</td>\n\t          <td>{user.Address}</td>\n\t          <td>{user.DishName.toString()}</td>\n\t          <td>{user.DishQuantity.toString()}</td>\n\t          <td>{user.Subtotal}</td>\n\t          <td>{user.OrderType}</td>\n\t        </tr>\n\t      )\n\t    })\n\t  }\n\treturn(\n\t\t\t\n// https://react-bootstrap.github.io/components/table/\n\t\t\t\n\t\t\t<Table responsive>\n\t\t\t  <thead>\n\t\t\t    <tr className=\"bg-light-silver\">\n\t\t\t      <th>DATE</th>\n\t\t\t      <th>ORDER ID</th>\n\t\t\t      <th>CUST_ID</th>\n\t\t\t      <th>ADDRESS</th>\n\t\t\t      <th>DELIVERY ITEMS</th> \t\n\t\t\t      <th>QTY</th>\n\t\t\t      <th>TOTAL(PKR)</th>\n\t\t\t      <th>ORDER TYPE</th>\n\t\t\t    </tr>\n\t\t\t  </thead>\n\t\t\t  <tbody>{renderTable()}</tbody>\n\t\t\t</Table>\n\t\t\t\n        \n      \n    \n\t\t\t\t\n\t\t);\n\n}\n\n// class CompletedOrders extends Component{\n// \trender(){\n// \t}\n// }\n\nexport default CompletedOrders\n\n// <Table responsive>\n// \t\t\t\t  <thead>\n// \t\t\t\t    <tr className=\"bg-light-silver\">\n// \t\t\t\t      <th>DATE</th>\n// \t\t\t\t      <th>ORDER ID</th>\n// \t\t\t\t      <th>CUST_ID</th>\n// \t\t\t\t      <th>ADDRESS</th>\n// \t\t\t\t      <th>DELIVERY ITEMS</th>\n// \t\t\t\t      <th>QTY</th>\n// \t\t\t\t      <th>TOTAL(PKR)</th>\n// \t\t\t\t      <th>ORDER TYPE</th>\n// \t\t\t\t      <th>ACTION</th>\n// \t\t\t\t      <th>ORDER TRACKING</th>\n// \t\t\t\t    </tr>\n// \t\t\t\t  </thead>\n// \t\t\t\t  <tbody>\n// \t\t\t\t    <tr>\n// \t\t\t\t      <td>1</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td><button  className=\"bg-green\">Accept</button><button className=\"bg-red\">Reject</button></td>\n// \t\t\t\t      <td><button className=\"bg-gray\">Preparing</button><button className=\"bg-light-silver\">Done</button></td>\n// \t\t\t\t    </tr>\n// \t\t\t\t    <tr>\n// \t\t\t\t      <td>2</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td><button className=\"bg-green\">Accept</button><button className=\"bg-red\">Reject</button></td>\n// \t\t\t\t      <td><button className=\"bg-gray\">Preparing</button><button className=\"bg-light-silver\">Done</button></td>\n// \t\t\t\t    </tr>\n// \t\t\t\t    <tr>\n// \t\t\t\t      <td>3</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td>Table cell</td>\n// \t\t\t\t      <td><button className=\"bg-green\">Accept</button><button className=\"bg-red\">Reject</button></td>\n// \t\t\t\t      <td><button className=\"bg-gray\">Preparing</button><button className=\"bg-light-silver\">Done</button></td>\n// \t\t\t\t    </tr>\n// \t\t\t\t  </tbody>\n// \t\t\t\t</Table>"]},"metadata":{},"sourceType":"module"}